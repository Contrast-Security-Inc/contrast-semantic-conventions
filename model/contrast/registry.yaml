groups:
  - id: registry.contrast.resource
    type: attribute_group
    brief: "contrast defined resources for observability data"
    attributes:
      - id: contrast.semconv.version
        brief: The version of contrast semantic conventions the data adheres to.
        type: string
        stability: experimental
        examples:
          - "0.3.0"
      - id: otel.semconv.version
        brief: The version of otel semantic conventions the data adheres to.
        type: string
        stability: experimental
        examples:
          - "1.22.0"
      - id: contrast.deployment
        brief: "deployment environment"
        stability: experimental
        type:
          allow_custom_values: false
          members:
            - id: qa
              stability: experimental
              value: "QA"
              brief: "quality assurance environment"
            - id: dev
              stability: experimental
              value: "DEVELOPMENT"
              brief: "development environment"
            - id: prod
              stability: experimental
              value: "PRODUCTION"
              brief: "production environment"
  - id: registry.contrast.action
    type: attribute_group
    brief: "This document defines semantic convention attributes in the Contrast namespace"
    attributes:
      - id: contrast.action
        stability: experimental
        brief: >
          The type of action that was observed.
        examples:
          - file-open-create
          - authn-request
        type:
          allow_custom_values: false
          members:
            - id: storage-query
              stability: experimental
              value: "storage-query"
              brief: "Functions that execute queries"
            - id: file-open-create
              stability: experimental
              value: "file-open-create"
              brief: "file open or create action"
            - id: url-forward
              stability: experimental
              value: "url-forward"
              brief: "Any function designed to forward a request to another URL"
            - id: url-redirect
              stability: experimental
              value: "url-redirect"
              brief: "Function that result in an http 302 redirect code sent to the client"
            - id: host-cmd-exec
              stability: experimental
              value: "host-cmd-exec"
              brief: "system shell command execution"
            - id: ldap-query
              stability: experimental
              value: "ldap-query"
              brief: "Functions that result in and ldap query operation"
            - id: smtp-exec
              stability: experimental
              value: "smtp-exec"
              brief: "Functions that result in an SMTP command execution"
            - id: outbound-service-call
              stability: experimental
              value: "outbound-service-call"
              brief: "Functions that result in external calls to other services"
            - id: authn-request
              stability: experimental
              value: "authn-request"
              brief: "Functions that perform authentication actions"
            - id: authz-request
              stability: experimental
              value: "authz-request"
              brief: "Functions that perform authorization actions"
            - id: el-execution
              stability: experimental
              value: "el-execution"
              brief: "Spring expression language execution"
            - id: ognl-execution
              stability: experimental
              value: "ognl-execution"
              brief: "Object-Graph Navigation Language expression execution."


  - id: contrast.action.authn
    type: attribute_group
    brief: "Describes attributes for Contrast Action span of type authn-request"
    attributes:
      - id: contrast.authentication.mechanism
        stability: experimental
        brief: >
          An authentication mechanism is a specific method or approach used to
          verify the identity of a user, system, or entity attempting to access a resource.
        examples: [ password, token, biometric ]
        type:
          allow_custom_values: false
          members:
            - id: password
              stability: experimental
              value: "password"
              brief: "Users provide a username and password."
            - id: certificate
              stability: experimental
              value: "certificate"
              brief: "x509 certificate authentication or similar"
            - id: token
              stability: experimental
              value: "token"
              brief: "Involves using a physical or virtual token to authenticate a user"
            - id: biometric
              stability: experimental
              value: "biometric"
              brief: "file open or create action"
            - id: mfa
              stability: experimental
              value: "mfa"
              brief: "Two or more of the above mechanisms are used"

      - id: contrast.authentication.protocol
        brief: >
          An authentication protocol is a set of rules and procedures that
          dictate how authentication mechanisms should operate to establish
          trust and verify identities securely.
        stability: experimental
        examples: [ oauth, saml, ldap, custom ]
        type:
          allow_custom_values: false
          members:
            - id: saml
              stability: experimental
              value: "saml"
              brief: "Security Assertion Markup Language"
            - id: oauth
              stability: experimental
              value: "oauth"
              brief: "Open Authentication and OIDC"
            - id: ldap
              stability: experimental
              value: "ldap"
              brief: "Lightweight Directory Access Protocol"
            - id: kerberos
              stability: experimental
              value: "kerberos"
              brief: ""


  - id: contrast.action.authz
    type: attribute_group
    brief: >
      Describes attributes for Contrast Action span of type authz-request
    attributes:
      - id: contrast.authorization.mechanism
        stability: experimental
        brief: >
          How are authz decisions made for the resource.
        examples: [rbac, dac, pbac]
        type:
          allow_custom_values: false
          members:
            - id: rbac
              stability: experimental
              value: "rbac"
              brief: Role Based Access Control
            - id: abac
              stability: experimental
              value: "abac"
              brief: Attribute Based Access Control
            - id: mac
              stability: experimental
              value: "mac"
              brief: >
                Mandatory Access Control (MAC) is a security model where access to resources is determined by
                the security labels assigned to subjects (users or processes) and objects (resources).
            - id: dac
              stability: experimental
              value: "dac"
              brief: Discretionary Access Control (DAC) is a model where owners of resources have the discretion to control access to their resources.
            - id: pbac
              stability: experimental
              value: "pbac"
              brief: Policy Based Access Control
            - id: hbac
              stability: experimental
              value: "hbac"
              brief: History Based Access Control
            - id: tbac
              stability: experimental
              value: "tbac"
              brief: Time Based Access Control

      - id: contrast.authorization.rbac.role
        stability: experimental
        brief: >
          Role Requested for authz check. The values here are very domain specific, but
          will always be normalized to a lowercase value in the data here.
        examples: [user, editor, manager]
        type: string
      - id: contrast.authorization.dac.permission
        stability: experimental
        brief: >
          Permission requested for access to the resource. The values here are very domain specific, but
          will always be normalized to a lowercase value in the data here.
        examples: [read, write, append, delete]
        type: string
      - id: contrast.authorization.mac.labels
        stability: experimental
        brief: >
          Labels on the requested resource. The values here are very domain specific, but
          will always be normalized to a lowercase value in the data here.
        examples: [top_secret, confidential, internal, public]
        type: string

  - id: contrast.action.file-open-create
    type: attribute_group
    brief: >
      Describes attributes for Contrast Action span of type file-open-create.
    attributes:
      - id: contrast.file.open.path
        stability: experimental
        brief: >
          The absolute path that was accessed.
        examples: [/etc/myconfig, /foo/bar, /some/tmp]
        type: string
      - id: contrast.file.open.flags
        stability: experimental
        brief: >
          The flags used when the file was opened or created.
        examples: [o_rdonly, o_rdwr]
        type:
          allow_custom_values: false
          members:
            - id: o_rdonly
              stability: experimental
              value: o_rdonly
              brief: Read only access
            - id: o_wronly
              stability: experimental
              value: o_wronly
              brief: Write only access
            - id: o_rdwr
              stability: experimental
              value: o_rdwr
              brief: Read/write access

  - id: registry.contrast.host-cmd-exec
    type: attribute_group
    brief: >
      Describes attributes for Contrast Action span of type host-cmd-exec.
    attributes:
      - id: contrast.host-cmd-exec.cmd
        stability: experimental
        brief: >
          String of executed command with its arguments.
        examples: [ls /foo, bash -c somebin, chmod 755 foobar]
        type: string


  - id: contrast.code-exec
    type: attribute_group
    brief: Attributes that refer to code execution operations
    attributes:
      - id: contrast.code.contents
        stability: experimental
        type: string
        brief: The code representing the expression being executed.
        examples:
          [
            "#{'String1 ' + 'string2'}",
            "#{20 - 1}",
            "'Just a string value'.substring(5)",
          ]
#  - id: contrast.action.span.el-execution
#    type: span
#    extends: attributes.contrast.code-exec
#    brief: >
#      Describes attributes for Contrast Action span of type el-execution. The Spring Expression Language (SpEL for short) is a
#      powerful expression language that supports querying and manipulating an object graph at runtime.
#  - id: contrast.action.span.ognl-execution
#    extends: attributes.contrast.code-exec
#    type: span
#    brief: >
#      Describes attributes for Contrast Action span of type ognl-execution. OGNL stands for Object-Graph Navigation Language.
#      It is an expression language for getting and setting properties of Java objects, plus other extras such as list projection
#      and selection and lambda expressions. You use the same expression for both getting and setting the value of a property.
  - id: attributes.contrast.dimensional
    type: attribute_group
    brief: "Important dimensional attributes for agents"
    extends: registry.contrast.resource
    attributes:
      - ref: http.route
        requirement_level:
          conditionally_required: iff observation is scoped to an http request
      - ref: http.request.method
        requirement_level:
          conditionally_required: iff observation is scoped to an http request
      - ref: service.namespace
      - ref: service.name
        requirement_level: required
      - ref: service.version
      - ref: service.instance.id
        requirement_level: required
      - ref: telemetry.sdk.language
      - ref: telemetry.sdk.name
      - ref: telemetry.sdk.version
      - ref: telemetry.distro.name
      - ref: telemetry.distro.version
      - ref: cloud.provider
      - ref: cloud.resource_id
      - ref: cloud.region